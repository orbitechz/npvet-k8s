# .github/workflows/deploy-application.yml

name: Deploy NPVET no GKE

on:
  push:
    branches:
      - staging
      - main # Usaremos 'main' como a branch de produção
  workflow_dispatch:

jobs:
  #========================================
  # JOB PARA O AMBIENTE DE STAGING
  #========================================
  deploy-staging:
    # Este job só executa se o evento for na branch 'staging'
    if: github.ref == 'refs/heads/staging'
    name: 'Deploy to Staging'
    runs-on: ubuntu-latest
    # Aponta para o ambiente 'staging' para usar os segredos corretos
    environment: staging

    permissions:
      contents: read
      id-token: 'write' # Necessário para a action setup-gcloud

    steps:
      - name: Checkout do Repositório da Aplicação.
        uses: actions/checkout@v4

      - name: Autenticar no Google Cloud (Staging)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_STAGING }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        
      - name: Instalar componente gke-gcloud-auth-plugin
        run: gcloud components install gke-gcloud-auth-plugin

      - name: Configurar kubectl para o cluster de Staging
        run: |
          # Substitua com os dados do seu cluster de staging
          gcloud container clusters get-credentials npvet-staging \
            --zone=us-central1-a \
            --project=mensal-staging

      - name: Criar arquivos de configuração para Staging
        run: |
          echo "${{ secrets.PROP_BACKEND_STAGING }}" >> ./overlays/staging/backend/backend.properties
          echo "${{ secrets.PROP_DATABASE_STAGING }}" >> ./overlays/staging/database/database.properties
          echo "${{ secrets.ENV_BACKEND_STAGING }}" >> ./overlays/staging/backend/backend.env
          echo "${{ secrets.ENV_DATABASE_STAGING }}" >> ./overlays/staging/database/database.env

      - name: Deploy da Aplicação no Staging com Kustomize
        run: kubectl apply -k overlays/staging

  #========================================
  # JOB PARA O AMBIENTE DE PRODUÇÃO
  #========================================
  deploy-production:
    # Este job só executa se o evento for na branch 'main'
    if: github.ref == 'refs/heads/main'
    name: 'Deploy to Production'
    runs-on: ubuntu-latest
    # Aponta para o ambiente 'production' para usar os segredos corretos
    environment: production

    permissions:
      contents: read
      id-token: 'write' # Necessário para a action setup-gcloud

    steps:
      - name: Checkout do Repositório da Aplicação
        uses: actions/checkout@v4

      - name: Autenticar no Google Cloud (Production)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY_PRODUCTION }}
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        
      - name: Configurar kubectl para o cluster de Produção
        run: |
          # Substitua com os dados do seu cluster de produção
          gcloud container clusters get-credentials npvet-prod \
            --zone=us-east1-b \
            --project=mensal04

      - name: Criar arquivos de configuração para Produção
        run: |
          echo "${{ secrets.PROP_BACKEND_PROD }}" >> ./overlays/prod/backend/backend.properties
          echo "${{ secrets.PROP_DATABASE_PROD }}" >> ./overlays/prod/database/database.properties
          echo "${{ secrets.ENV_BACKEND_PROD }}" >> ./overlays/prod/backend/backend.env
          echo "${{ secrets.ENV_DATABASE_PROD }}" >> ./overlays/prod/database/database.env

      - name: Deploy da Aplicação na Produção com Kustomize
        run: kubectl apply -k overlays/prod